name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Build and package
        run: npm run all

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        run: |
          if [ -f CHANGELOG.md ]; then
            # Extract changelog section for this version
            sed -n "/## \[${{ steps.get_version.outputs.VERSION }}\]/,/## \[/p" CHANGELOG.md | sed '$d' > release_notes.md
          else
            echo "Release ${{ steps.get_version.outputs.VERSION }}" > release_notes.md
          fi

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          body_path: release_notes.md
          draft: false
          prerelease: false

      - name: Update major version tag
        run: |
          MAJOR_VERSION=$(echo ${{ steps.get_version.outputs.VERSION }} | cut -d. -f1)
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -d $MAJOR_VERSION || true
          git push origin :refs/tags/$MAJOR_VERSION || true
          git tag $MAJOR_VERSION
          git push origin $MAJOR_VERSION
